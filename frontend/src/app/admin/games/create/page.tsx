// frontend/src/app/admin/games/create/page.tsx - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'
import { adminApi } from '@/lib/adminApi'
import { Upload, X, ImageIcon } from 'lucide-react'

export default function CreateGamePage() {
  const router = useRouter()
  const [name, setName] = useState('')
  const [description, setDescription] = useState('')
  const [instructions, setInstructions] = useState('')
  const [faq, setFaq] = useState('')
  const [bannerUrl, setBannerUrl] = useState('')
  const [autoSupport, setAutoSupport] = useState(true)
  const [enabled, setEnabled] = useState(true)
  const [sortOrder, setSortOrder] = useState(0)
  const [bannerUploading, setBannerUploading] = useState(false)

  const uploadBanner = async (file: File) => {
    if (file.size > 5 * 1024 * 1024) {
      alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 5MB)')
      return
    }

    setBannerUploading(true)
    try {
      const formData = new FormData()
      formData.append('file', file)
      formData.append('subfolder', 'games')

      const response = await adminApi.post('/upload/image', formData)
      setBannerUrl(response.data.file_url)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error)
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞')
    } finally {
      setBannerUploading(false)
    }
  }

  const handleBannerUpload = () => {
    const input = document.createElement('input')
    input.type = 'file'
    input.accept = 'image/*'
    input.onchange = (e) => {
      const file = (e.target as HTMLInputElement).files?.[0]
      if (file) uploadBanner(file)
    }
    input.click()
  }

  const removeBanner = () => {
    setBannerUrl('')
  }

  const handleSubmit = async () => {
    if (!name.trim()) {
      alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã')
      return
    }

    try {
      const gameData = {
        name: name.trim(),
        description: description.trim() || null,
        instructions: instructions.trim() || null,
        faq: faq.trim() || null,
        banner_url: bannerUrl || null,
        auto_support: autoSupport,
        enabled,
        sort_order: sortOrder
      }

      await adminApi.post('/admin/games/', gameData)
      alert('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
      router.push('/admin/games')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã:', error)
      alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã')
    }
  }

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h1 className="text-2xl font-bold mb-6">–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã</h1>

      <div className="space-y-6">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-zinc-800 p-4 rounded-lg">
          <h2 className="text-lg font-semibold mb-4">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>

          <div className="grid grid-cols-2 gap-4 mb-3">
            <div>
              <label className="text-sm text-zinc-400">–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã *</label>
              <input
                type="text"
                className="w-full p-2 bg-zinc-700 text-white rounded"
                value={name}
                onChange={e => setName(e.target.value)}
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã"
              />
            </div>
            <div>
              <label className="text-sm text-zinc-400">–ü–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</label>
              <input
                type="number"
                className="w-full p-2 bg-zinc-700 text-white rounded"
                value={sortOrder}
                onChange={e => setSortOrder(Number(e.target.value))}
              />
            </div>
          </div>

          <label className="text-sm text-zinc-400">–û–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            className="w-full mb-3 p-2 bg-zinc-700 text-white rounded"
            rows={3}
            value={description}
            onChange={e => setDescription(e.target.value)}
            placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã..."
          />
        </div>

        {/* –ë–∞–Ω–Ω–µ—Ä –∏–≥—Ä—ã */}
        <div className="bg-zinc-800 p-4 rounded-lg">
          <h2 className="text-lg font-semibold mb-4">–ë–∞–Ω–Ω–µ—Ä –∏–≥—Ä—ã</h2>

          {bannerUrl ? (
            <div className="relative inline-block">
              <img
                src={bannerUrl}
                alt="–ë–∞–Ω–Ω–µ—Ä –∏–≥—Ä—ã"
                className="w-full max-w-md h-32 object-cover rounded border border-zinc-600"
              />
              <button
                onClick={removeBanner}
                className="absolute -top-2 -right-2 bg-red-600 hover:bg-red-700 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm"
              >
                <X className="w-4 h-4" />
              </button>
            </div>
          ) : (
            <button
              onClick={handleBannerUpload}
              disabled={bannerUploading}
              className="border-2 border-dashed border-zinc-600 hover:border-zinc-500 rounded-lg p-8 w-full text-center transition-colors disabled:opacity-50"
            >
              <div className="flex flex-col items-center gap-2">
                {bannerUploading ? (
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
                ) : (
                  <ImageIcon className="w-8 h-8 text-zinc-400" />
                )}
                <span className="text-zinc-400">
                  {bannerUploading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–Ω–Ω–µ—Ä–∞'}
                </span>
                <span className="text-xs text-zinc-500">PNG, JPG, WEBP –¥–æ 5MB</span>
              </div>
            </button>
          )}
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="bg-zinc-800 p-4 rounded-lg">
          <h2 className="text-lg font-semibold mb-4">üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫ –∏–≥—Ä–µ</h2>
          <p className="text-sm text-zinc-400 mb-3">
            –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ
          </p>
          <textarea
            className="w-full p-3 bg-zinc-700 text-white rounded"
            rows={6}
            value={instructions}
            onChange={e => setInstructions(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä:&#10;1. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π ID&#10;2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä&#10;3. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–∞–ª—é—Ç–∞ –ø–æ—Å—Ç—É–ø–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5-15 –º–∏–Ω—É—Ç&#10;4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É - –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"
          />
        </div>

        {/* FAQ */}
        <div className="bg-zinc-800 p-4 rounded-lg">
          <h2 className="text-lg font-semibold mb-4">‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)</h2>
          <p className="text-sm text-zinc-400 mb-3">
            –î–æ–±–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ
          </p>
          <textarea
            className="w-full p-3 bg-zinc-700 text-white rounded"
            rows={8}
            value={faq}
            onChange={e => setFaq(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä:&#10;&#10;Q: –ö–∞–∫ –Ω–∞–π—Ç–∏ –º–æ–π –∏–≥—Ä–æ–≤–æ–π ID?&#10;A: –ó–∞–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã, —Ç–∞–º –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID&#10;&#10;Q: –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ?&#10;A: –û–±—ã—á–Ω–æ 5-15 –º–∏–Ω—É—Ç, –º–∞–∫—Å–∏–º—É–º –¥–æ 2 —á–∞—Å–æ–≤&#10;&#10;Q: –ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ –≤–∞–ª—é—Ç–∞ –Ω–µ –ø—Ä–∏—à–ª–∞?&#10;A: –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞"
          />
        </div>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="bg-zinc-800 p-4 rounded-lg">
          <h2 className="text-lg font-semibold mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>

          <div className="space-y-3">
            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                checked={autoSupport}
                onChange={e => setAutoSupport(e.target.checked)}
                id="auto-support"
              />
              <label htmlFor="auto-support">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–µ—Å–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–æ - –∑–∞–∫–∞–∑—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é)
              </label>
            </div>

            <div className="flex items-center gap-2">
              <input
                type="checkbox"
                checked={enabled}
                onChange={e => setEnabled(e.target.checked)}
                id="enabled"
              />
              <label htmlFor="enabled">
                –ê–∫—Ç–∏–≤–Ω–∞ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ)
              </label>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex gap-2">
          <button
            onClick={() => router.push('/admin/games')}
            className="bg-zinc-600 hover:bg-zinc-700 text-white px-4 py-2 rounded"
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            onClick={handleSubmit}
            className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"
          >
            –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É
          </button>
        </div>
      </div>
    </div>
  )
}