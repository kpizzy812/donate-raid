# deploy-manager.ps1 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º (PowerShell)
param(
    [string]$Action = ""
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
$REMOTE_USER = "root"
$REMOTE_HOST = "194.169.160.101"
$REMOTE_DIR = "/home/donate"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
function Write-ColorText {
    param(
        [string]$Text,
        [string]$Color = "White"
    )
    Write-Host $Text -ForegroundColor $Color
}

function Show-Header {
    Clear-Host
    Write-Host "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" -ForegroundColor Magenta
    Write-Host "‚ïë                    üöÄ DEPLOY MANAGER üöÄ                      ‚ïë" -ForegroundColor Magenta
    Write-Host "‚ïë                     DonateRaid Project                       ‚ïë" -ForegroundColor Magenta
    Write-Host "‚ïë                       PowerShell                             ‚ïë" -ForegroundColor Magenta
    Write-Host "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" -ForegroundColor Magenta
    Write-Host ""
}

function Show-Menu {
    Write-ColorText "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" "White"
    Write-Host ""
    Write-ColorText "üì¶ –î–ï–ü–õ–û–ô –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø:" "Cyan"
    Write-ColorText "  1 - üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (rsync + build + migrate + restart)" "Green"
    Write-ColorText "  2 - üìÅ –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ rsync)" "Green"
    Write-ColorText "  3 - üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (server-setup.sh)" "Green"
    Write-Host ""
    Write-ColorText "üê≥ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ê–ú–ò:" "Cyan"
    Write-ColorText "  4 - ‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Green"
    Write-ColorText "  5 - ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Green"
    Write-ColorText "  6 - üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Green"
    Write-ColorText "  7 - üèóÔ∏è  –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Green"
    Write-Host ""
    Write-ColorText "üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì:" "Cyan"
    Write-ColorText "  8 - üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Green"
    Write-ColorText "  9 - üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Green"
    Write-ColorText "  10 - üìà –ñ–∏–≤—ã–µ –ª–æ–≥–∏ (follow)" "Green"
    Write-Host ""
    Write-ColorText "üõ†Ô∏è –†–ê–ó–†–ê–ë–û–¢–ö–ê:" "Cyan"
    Write-ColorText "  11 - üêç –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î" "Green"
    Write-ColorText "  12 - üíæ –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" "Green"
    Write-ColorText "  13 - üîç SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É" "Green"
    Write-Host ""
    Write-ColorText "  0 - ‚ùå –í—ã—Ö–æ–¥" "Red"
    Write-Host ""
}

function Test-Requirements {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH
    if (-not (Get-Command ssh -ErrorAction SilentlyContinue)) {
        Write-ColorText "‚ùå SSH –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSH –∏–ª–∏ Git for Windows" "Red"
        Write-ColorText "üí° –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ WSL" "Yellow"
        Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
        return $false
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SCP
    if (-not (Get-Command scp -ErrorAction SilentlyContinue)) {
        Write-ColorText "‚ùå SCP –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSH" "Red"
        Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
        return $false
    }

    return $true
}

function Confirm-Action {
    param([string]$Message)

    Write-ColorText "‚ö†Ô∏è  $Message" "Yellow"
    $response = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N]"

    if ($response -eq "y" -or $response -eq "yes" -or $response -eq "Y") {
        return $true
    }

    Write-ColorText "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ" "Red"
    return $false
}

function Invoke-FullDeploy {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π..." "Green"

    if (-not (Confirm-Action "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ $REMOTE_HOST")) {
        return
    }

    Write-ColorText "üìÇ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤..." "Blue"

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º scp –∏–ª–∏ rsync –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    if (Get-Command rsync -ErrorAction SilentlyContinue) {
        & rsync -az --delete --exclude=".git/" --exclude="node_modules/" --exclude="*.pyc" --exclude="__pycache__/" --exclude=".next/" --exclude="backend/logs/" --exclude="backend/.venv/" ./ "$REMOTE_USER@$REMOTE_HOST`:$REMOTE_DIR/"
    } else {
        Write-ColorText "‚ö†Ô∏è Rsync –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º scp..." "Yellow"
        & scp -r . "$REMOTE_USER@$REMOTE_HOST`:$REMOTE_DIR/"
    }

    Write-ColorText "üîß –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "Blue"

    $deployScript = @"
cd $REMOTE_DIR
set -euo pipefail
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if ! command -v docker >/dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ .env..."
    cp .env.example .env
    sed -i "s|localhost:8001|$REMOTE_HOST:8001|g" .env
fi
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down --remove-orphans || true
echo "üî® –°–æ–±–∏—Ä–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose build --no-cache
echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d --force-recreate
echo "‚è≥ –ñ–¥–µ–º PostgreSQL..."
sleep 10
echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker-compose exec -T backend alembic upgrade head || true
echo "üìä –°—Ç–∞—Ç—É—Å:"
docker-compose ps
echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
"@

    & ssh "$REMOTE_USER@$REMOTE_HOST" $deployScript

    Write-ColorText "üéâ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!" "Green"
    Write-ColorText "üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://$REMOTE_HOST`:3001" "Cyan"
    Write-ColorText "üîå API: http://$REMOTE_HOST`:8001" "Cyan"
}

function Invoke-QuickSync {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üìÅ –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞..." "Green"

    if (Get-Command rsync -ErrorAction SilentlyContinue) {
        & rsync -az --exclude=".git/" --exclude="node_modules/" --exclude="*.pyc" --exclude="__pycache__/" --exclude=".next/" --exclude="backend/logs/" --exclude="backend/.venv/" ./ "$REMOTE_USER@$REMOTE_HOST`:$REMOTE_DIR/"
    } else {
        & scp -r . "$REMOTE_USER@$REMOTE_HOST`:$REMOTE_DIR/"
    }

    Write-ColorText "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" "Green"
    Write-ColorText "üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" "Yellow"
}

function Invoke-SetupServer {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..." "Green"

    if (-not (Confirm-Action "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ $REMOTE_HOST")) {
        return
    }

    if (-not (Test-Path "server-setup.sh")) {
        Write-ColorText "‚ùå –§–∞–π–ª server-setup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω!" "Red"
        return
    }

    Write-ColorText "üì§ –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..." "Blue"
    & scp server-setup.sh "$REMOTE_USER@$REMOTE_HOST`:/tmp/"

    Write-ColorText "üîß –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞..." "Blue"
    & ssh "$REMOTE_USER@$REMOTE_HOST" "chmod +x /tmp/server-setup.sh && /tmp/server-setup.sh"

    Write-ColorText "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" "Green"
}

function Invoke-ContainerAction {
    param([string]$Action, [string]$Description)

    if (-not (Test-Requirements)) { return }

    Write-ColorText $Description "Green"
    & ssh "$REMOTE_USER@$REMOTE_HOST" "cd $REMOTE_DIR && docker-compose $Action"

    if ($Action -eq "up -d") {
        Write-ColorText "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!" "Green"
        Show-ContainerStatus
    } elseif ($Action -eq "down") {
        Write-ColorText "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!" "Green"
    } elseif ($Action -eq "restart") {
        Write-ColorText "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!" "Green"
        Show-ContainerStatus
    }
}

function Show-ContainerStatus {
    Write-ColorText "üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" "Green"
    & ssh "$REMOTE_USER@$REMOTE_HOST" "cd $REMOTE_DIR && docker-compose ps"
}

function Show-Logs {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üìú –õ–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" "Green"
    Write-ColorText "(–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)" "Yellow"
    Write-Host ""
    & ssh "$REMOTE_USER@$REMOTE_HOST" "cd $REMOTE_DIR && docker-compose logs --tail=50"
}

function Show-LiveLogs {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üìà –ñ–∏–≤—ã–µ –ª–æ–≥–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):" "Green"
    Write-Host ""
    & ssh "$REMOTE_USER@$REMOTE_HOST" "cd $REMOTE_DIR && docker-compose logs -f"
}

function Invoke-Migrations {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üêç –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..." "Green"

    $migrationScript = @"
cd $REMOTE_DIR
echo "üóÑÔ∏è –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π:"
docker-compose exec -T backend alembic current || true
echo ""
echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
docker-compose exec -T backend alembic upgrade head
echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
"@

    & ssh "$REMOTE_USER@$REMOTE_HOST" $migrationScript
}

function Invoke-DatabaseBackup {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." "Green"

    $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
    $backupName = "backup_$timestamp.sql"

    $backupScript = @"
cd $REMOTE_DIR
echo "üíæ –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø: $backupName"
mkdir -p backups
docker-compose exec -T postgres pg_dump -U postgres donateraid > "backups/$backupName"
echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: backups/$backupName"
echo "üìÅ –°–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤:"
ls -la backups/
"@

    & ssh "$REMOTE_USER@$REMOTE_HOST" $backupScript
}

function Invoke-SSHConnect {
    if (-not (Test-Requirements)) { return }

    Write-ColorText "üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É..." "Green"
    Write-ColorText "–í—ã –±—É–¥–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ $REMOTE_HOST" "Yellow"
    Write-ColorText "–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 'exit'" "Yellow"
    Write-Host ""

    & ssh "$REMOTE_USER@$REMOTE_HOST" "cd $REMOTE_DIR && bash"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Start-DeployManager {
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–ø—Ä—è–º—É—é
    if ($Action -ne "") {
        switch ($Action) {
            "1" { Invoke-FullDeploy; return }
            "2" { Invoke-QuickSync; return }
            "3" { Invoke-SetupServer; return }
            "4" { Invoke-ContainerAction "up -d" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."; return }
            "5" {
                if (Confirm-Action "–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±—É–¥—É—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã") {
                    Invoke-ContainerAction "down" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
                }
                return
            }
            "6" { Invoke-ContainerAction "restart" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."; return }
            "8" { Show-ContainerStatus; return }
            "9" { Show-Logs; return }
            "10" { Show-LiveLogs; return }
            "11" { Invoke-Migrations; return }
            "12" { Invoke-DatabaseBackup; return }
            "13" { Invoke-SSHConnect; return }
            default { Write-ColorText "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: $Action" "Red"; return }
        }
    }

    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    while ($true) {
        Show-Header
        Show-Menu

        $choice = Read-Host "–í–∞—à –≤—ã–±–æ—Ä [0-13]"

        switch ($choice) {
            "1" { Invoke-FullDeploy }
            "2" { Invoke-QuickSync }
            "3" { Invoke-SetupServer }
            "4" { Invoke-ContainerAction "up -d" "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." }
            "5" {
                if (Confirm-Action "–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±—É–¥—É—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã") {
                    Invoke-ContainerAction "down" "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
                }
            }
            "6" { Invoke-ContainerAction "restart" "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." }
            "7" {
                if (Confirm-Action "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±—É–¥—É—Ç –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)") {
                    Write-ColorText "üèóÔ∏è –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." "Green"
                    & ssh "$REMOTE_USER@$REMOTE_HOST" "cd $REMOTE_DIR && docker-compose down && docker-compose build --no-cache && docker-compose up -d"
                    Write-ColorText "‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" "Green"
                    Show-ContainerStatus
                }
            }
            "8" { Show-ContainerStatus }
            "9" { Show-Logs }
            "10" { Show-LiveLogs }
            "11" { Invoke-Migrations }
            "12" { Invoke-DatabaseBackup }
            "13" { Invoke-SSHConnect }
            "0" {
                Write-ColorText "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!" "Green"
                return
            }
            default {
                Write-ColorText "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." "Red"
            }
        }

        if ($choice -ne "10" -and $choice -ne "13" -and $choice -ne "0") {
            Read-Host "`n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if (-not (Test-Path "docker-compose.yml")) {
    Write-ColorText "‚ùå –û—à–∏–±–∫–∞: docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!" "Red"
    Write-ColorText "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞." "Yellow"
    exit 1
}

# –ó–∞–ø—É—Å–∫–∞–µ–º
Start-DeployManager