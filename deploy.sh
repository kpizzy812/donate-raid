#!/usr/bin/env bash
# deploy.sh - –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è
set -euo pipefail

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
REMOTE_USER="root"
REMOTE_HOST="194.169.160.101"
REMOTE_DIR="/home/donate"
LOCAL_DIR="$(pwd)"

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ ${REMOTE_HOST}..."

# 1. Rsync: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
echo "üìÇ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤..."
rsync -az --delete \
  --exclude=".git/" \
  --exclude="node_modules/" \
  --exclude="*.pyc" \
  --exclude="__pycache__/" \
  --exclude=".next/" \
  --exclude="backend/logs/" \
  --exclude="backend/.venv/" \
  "${LOCAL_DIR}/" "${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_DIR}/"

# 2. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –ø–æ SSH –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh "${REMOTE_USER}@${REMOTE_HOST}" bash <<EOF
  set -euo pipefail
  cd "${REMOTE_DIR}"

  echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
  if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ server-setup.sh"
    exit 1
  fi

  # –°–æ–∑–¥–∞–µ–º .env –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if [ ! -f .env ]; then
    echo "‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    cp .env.example .env
    echo "üîë –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∫—à–Ω –∑–∞–ø—É—Å–∫–æ–º!"
  fi

  # –ó–∞–º–µ–Ω—è–µ–º docker-compose.yml –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
  if [ -f docker-compose.prod.yml ]; then
    echo "üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω docker-compose..."
    cp docker-compose.prod.yml docker-compose.yml
  fi

  echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
  docker-compose down --remove-orphans || true

  echo "üî® –°–æ–±–∏—Ä–∞—é –∏ –∑–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
  docker-compose up --build -d

  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL..."
  sleep 10

  # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
  echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
  docker-compose exec -T backend alembic upgrade head || {
    echo "‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å, –≤–æ–∑–º–æ–∂–Ω–æ –ë–î –ø—É—Å—Ç–∞—è"
    docker-compose exec -T backend alembic revision --autogenerate -m "initial migration" || true
    docker-compose exec -T backend alembic upgrade head || true
  }

  echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
  docker-compose ps

  echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend:"
  docker-compose logs --tail=20

  echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
  echo "üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://${REMOTE_HOST}:3000"
  echo "üîå API: http://${REMOTE_HOST}:8000"
  echo "üìö API Docs: http://${REMOTE_HOST}:8000/docs"

EOF

echo "üéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ssh ${REMOTE_USER}@${REMOTE_HOST} 'cd ${REMOTE_DIR} && docker-compose logs -f backend'"
echo "   ssh ${REMOTE_USER}@${REMOTE_HOST} 'cd ${REMOTE_DIR} && docker-compose restart backend'"