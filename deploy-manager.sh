#!/usr/bin/env bash
# deploy-manager.sh - –£–¥–æ–±–Ω—ã–π CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
REMOTE_USER="root"
REMOTE_HOST="194.169.160.101"
REMOTE_DIR="/home/donate"
LOCAL_DIR="$(pwd)"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë${WHITE}                    üöÄ DEPLOY MANAGER üöÄ                      ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïë${CYAN}                     DonateRaid Project                       ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
show_menu() {
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo ""
    echo -e "${CYAN}üì¶ –î–ï–ü–õ–û–ô –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø:${NC}"
    echo -e "  ${GREEN}1)${NC} üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (rsync + build + migrate + restart)"
    echo -e "  ${GREEN}2)${NC} üìÅ –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ rsync)"
    echo -e "  ${GREEN}3)${NC} üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (server-setup.sh)"
    echo ""
    echo -e "${CYAN}üê≥ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ê–ú–ò:${NC}"
    echo -e "  ${GREEN}4)${NC} ‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo -e "  ${GREEN}5)${NC} ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo -e "  ${GREEN}6)${NC} üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo -e "  ${GREEN}7)${NC} üèóÔ∏è  –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo ""
    echo -e "${CYAN}üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì:${NC}"
    echo -e "  ${GREEN}8)${NC} üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo -e "  ${GREEN}9)${NC} üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo -e "  ${GREEN}10)${NC} üìà –ñ–∏–≤—ã–µ –ª–æ–≥–∏ (follow)"
    echo ""
    echo -e "${CYAN}üõ†Ô∏è  –†–ê–ó–†–ê–ë–û–¢–ö–ê:${NC}"
    echo -e "  ${GREEN}11)${NC} üêç –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î"
    echo -e "  ${GREEN}12)${NC} üíæ –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo -e "  ${GREEN}13)${NC} üîç SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É"
    echo ""
    echo -e "  ${RED}0)${NC} ‚ùå –í—ã—Ö–æ–¥"
    echo ""
    echo -e -n "${YELLOW}–í–∞—à –≤—ã–±–æ—Ä [0-13]: ${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
confirm_action() {
    local message="$1"
    echo -e "${YELLOW}‚ö†Ô∏è  ${message}${NC}"
    echo -e -n "${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N]: ${NC}"
    read -r response
    case "$response" in
        [yY][eE][sS]|[yY])
            return 0
            ;;
        *)
            echo -e "${RED}‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ${NC}"
            return 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—É–∑—ã
pause() {
    echo ""
    echo -e -n "${CYAN}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read -r
}

# 1. –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π
full_deploy() {
    echo -e "${GREEN}üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π...${NC}"

    if ! confirm_action "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ ${REMOTE_HOST}"; then
        return 1
    fi

    echo -e "${BLUE}üìÇ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤...${NC}"
    rsync -az --delete \
        --exclude=".git/" \
        --exclude="node_modules/" \
        --exclude="*.pyc" \
        --exclude="__pycache__/" \
        --exclude=".next/" \
        --exclude="backend/logs/" \
        --exclude="backend/.venv/" \
        "${LOCAL_DIR}/" "${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_DIR}/"

    echo -e "${BLUE}üîß –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
    ssh "${REMOTE_USER}@${REMOTE_HOST}" bash <<EOF
        set -euo pipefail
        cd "${REMOTE_DIR}"

        echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        if ! command -v docker &> /dev/null; then
            echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞."
            exit 1
        fi

        if [ ! -f .env ]; then
            echo "‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
            cp .env.example .env
            sed -i "s|NEXT_PUBLIC_API_URL=http://localhost:8001/api|NEXT_PUBLIC_API_URL=http://${REMOTE_HOST}:8001/api|g" .env
            sed -i "s|FRONTEND_URL=http://localhost:3001|FRONTEND_URL=http://${REMOTE_HOST}:3001|g" .env
        fi

        echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
        docker-compose down --remove-orphans || true

        echo "üî® –°–æ–±–∏—Ä–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
        docker-compose build --no-cache

        echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
        docker-compose up -d --force-recreate

        echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL..."
        sleep 10

        echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
        docker-compose exec -T backend alembic upgrade head || true

        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
        docker-compose ps

        echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
EOF

    echo -e "${GREEN}üéâ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!${NC}"
    echo -e "${CYAN}üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://${REMOTE_HOST}:3001${NC}"
    echo -e "${CYAN}üîå API: http://${REMOTE_HOST}:8001${NC}"
}

# 2. –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
quick_sync() {
    echo -e "${GREEN}üìÅ –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞...${NC}"

    echo -e "${BLUE}üìÇ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã...${NC}"
    rsync -az \
        --exclude=".git/" \
        --exclude="node_modules/" \
        --exclude="*.pyc" \
        --exclude="__pycache__/" \
        --exclude=".next/" \
        --exclude="backend/logs/" \
        --exclude="backend/.venv/" \
        "${LOCAL_DIR}/" "${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_DIR}/"

    echo -e "${GREEN}‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo -e "${YELLOW}üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤${NC}"
}

# 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
setup_server() {
    echo -e "${GREEN}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...${NC}"

    if ! confirm_action "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ${REMOTE_HOST}"; then
        return 1
    fi

    if [ ! -f "server-setup.sh" ]; then
        echo -e "${RED}‚ùå –§–∞–π–ª server-setup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        return 1
    fi

    echo -e "${BLUE}üì§ –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...${NC}"
    scp server-setup.sh "${REMOTE_USER}@${REMOTE_HOST}:/tmp/"

    echo -e "${BLUE}üîß –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
    ssh "${REMOTE_USER}@${REMOTE_HOST}" "chmod +x /tmp/server-setup.sh && /tmp/server-setup.sh"

    echo -e "${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
}

# 4. –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
start_containers() {
    echo -e "${GREEN}‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && docker-compose up -d"

    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!${NC}"
    show_container_status
}

# 5. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_containers() {
    echo -e "${GREEN}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"

    if ! confirm_action "–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±—É–¥—É—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; then
        return 1
    fi

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && docker-compose down"

    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
}

# 6. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
restart_containers() {
    echo -e "${GREEN}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && docker-compose restart"

    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!${NC}"
    show_container_status
}

# 7. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
rebuild_containers() {
    echo -e "${GREEN}üèóÔ∏è –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"

    if ! confirm_action "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±—É–¥—É—Ç –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)"; then
        return 1
    fi

    ssh "${REMOTE_USER}@${REMOTE_HOST}" bash <<EOF
        cd ${REMOTE_DIR}
        echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
        docker-compose down
        echo "üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –±–µ–∑ –∫—ç—à–∞..."
        docker-compose build --no-cache
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º..."
        docker-compose up -d
EOF

    echo -e "${GREEN}‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    show_container_status
}

# 8. –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
show_container_status() {
    echo -e "${GREEN}üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && docker-compose ps"
}

# 9. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${GREEN}üìú –õ–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
    echo -e "${YELLOW}(–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)${NC}"
    echo ""

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && docker-compose logs --tail=50"
}

# 10. –ñ–∏–≤—ã–µ –ª–æ–≥–∏
follow_logs() {
    echo -e "${GREEN}üìà –ñ–∏–≤—ã–µ –ª–æ–≥–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
    echo ""

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && docker-compose logs -f"
}

# 11. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
apply_migrations() {
    echo -e "${GREEN}üêç –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î...${NC}"

    ssh "${REMOTE_USER}@${REMOTE_HOST}" bash <<EOF
        cd ${REMOTE_DIR}
        echo "üóÑÔ∏è  –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π:"
        docker-compose exec -T backend alembic current || true
        echo ""
        echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
        docker-compose exec -T backend alembic upgrade head
        echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
EOF
}

# 12. –ë—ç–∫–∞–ø –ë–î
backup_database() {
    echo -e "${GREEN}üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"

    local backup_name="backup_$(date +%Y%m%d_%H%M%S).sql"

    ssh "${REMOTE_USER}@${REMOTE_HOST}" bash <<EOF
        cd ${REMOTE_DIR}
        echo "üíæ –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø: ${backup_name}"
        docker-compose exec -T postgres pg_dump -U postgres donateraid > "backups/${backup_name}"
        echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: backups/${backup_name}"
        echo "üìÅ –°–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤:"
        ls -la backups/ || mkdir -p backups
EOF
}

# 13. SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
ssh_connect() {
    echo -e "${GREEN}üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...${NC}"
    echo -e "${YELLOW}–í—ã –±—É–¥–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ ${REMOTE_HOST}${NC}"
    echo -e "${YELLOW}–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 'exit'${NC}"
    echo ""

    ssh "${REMOTE_USER}@${REMOTE_HOST}" "cd ${REMOTE_DIR} && bash"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
main() {
    while true; do
        show_header
        show_menu

        read -r choice
        echo ""

        case $choice in
            1)
                full_deploy
                pause
                ;;
            2)
                quick_sync
                pause
                ;;
            3)
                setup_server
                pause
                ;;
            4)
                start_containers
                pause
                ;;
            5)
                stop_containers
                pause
                ;;
            6)
                restart_containers
                pause
                ;;
            7)
                rebuild_containers
                pause
                ;;
            8)
                show_container_status
                pause
                ;;
            9)
                show_logs
                pause
                ;;
            10)
                follow_logs
                ;;
            11)
                apply_migrations
                pause
                ;;
            12)
                backup_database
                pause
                ;;
            13)
                ssh_connect
                ;;
            0)
                echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                pause
                ;;
        esac
    done
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞.${NC}"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
main