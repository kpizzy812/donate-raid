services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: donate_raid
    volumes:
      - pgdata2:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    env_file: .env
#    ports:
#      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    environment:
      - BOT_MODE=false  # üëà –∑–∞–ø—É—Å–∫ FastAPI

  bot:
    build: ./backend
    command: ./start.sh
    depends_on:
      - backend
    environment:
      - BOT_MODE=true
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_ADMIN_CHAT_IDS=${TG_ADMIN_CHAT_IDS}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}




  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app           # üîÅ –ø–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
      - /app/node_modules         # üß± –∏—Å–∫–ª—é—á–∞–µ–º node_modules –∏–∑ —Å–∏–Ω–∫–∞
#    ports:
#      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
    tty: true                     # ‚è≥ —Ñ–∏–∫—Å –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥—ã (npm run dev)

  proxy:
    image: nginx:alpine
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro



volumes:
  pgdata2:
